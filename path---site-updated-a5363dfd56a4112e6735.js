webpackJsonp([0xf17fa59adf35],{646:function(e,t){e.exports={data:{markdownRemark:{html:'<p>It\'s always a hard decision to move to a new platform for my personal site, and this time it was sped up by the growing\nneed for https (for SEO) and the release of GatsbyJS v1. </p>\n<p>Up until now I was using a monolitical Apache + PHP webserver, but since the 2013 version of the site, a dynamic webserver\nwas no longer needed for the blog, because it was generated statically with Jekyll. Only the "send mail" component was\nin PHP and I was running some other PHP apps, and hosting some binaries, that have nothing to do with the blog. I\'ve\ndone away with the PHP apps: communication by mail was already almost zero and the other apps were outdated. </p>\n<p>Now the blog has been properly containerized, this means future upgrades will be easier too: the blog is its own app\nwith its own scope. When I will need anything dynamic in the future, I will use <a href="https://serverless.com/">Serverless</a> functions.</p>\n<p>Another good reason to migrate from <a href="https://jekyllrb.com/">Jekyll</a> to <a href="https://www.gatsbyjs.org/">Gatsby</a> is letting go\nof Ruby dependencies and migrating to a NodeJS\nbased platform. With Jekyll I started to run into problems with recreating the Jekyll stack with the\ncorrect dependencies to build the blog, in case of restoring after an emergency. This might be caused by my lack of knowledge\nof Ruby, but it meant it was really time to upgrade to a newer version of Jekyll or start with a new theme. And in the mean\ntime, Gatsby 1.0 was released and I really subscribe to the <a href="https://jamstack.org/">JAMstack</a> architecture.  </p>\n<p>With the new setup, I can work with a modern and familiar stack e.g. Babel, React, TravisCI. I still believe in static site\ngeneration for blogs, and just like in Jekyll, adding a post in Gatsby is just a matter of adding a Markdown file with\nsome frontmatter. But an improvement is that you can also drop React components in the pages dir that will be automatically\npicked up as pages. And it is even possible to add a React component inside a Markdown post. Try clicking the screenshots\nbelow for a simple lightbox feature and\nsee the source for <a href="https://raw.githubusercontent.com/mdvanes/mdworld-jackson/master/content/posts/2018-05-10-site-updated.md">this post</a>. </p>\n<p>For more information about the current stack, see the <a href="../about">about page</a>.</p>\n<h1 id="cover-images"><a href="#cover-images" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Cover images</h1>\n<p>The cover images for each post, e.g. the image you see on top of this post, are procedurally generated\nwith my project <a href="https://github.com/mdvanes/procgen-cover">procgen-cover</a>. This was inspired by the talk\nby <a href="http://www.galaxykate.com/">Kate Compton</a> on <a href="https://2018.jsconf.is/">JSConf.is</a> 2018. </p>\n<h1 id="old-themes"><a href="#old-themes" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Old themes</h1>\n<p>Static versions of the 2 last themes still run <a href="https://mdvanes.github.io/mdworld-ingram">here (2013-2018)</a>\nand <a href="https://mdvanes.github.io/mdworld-simon">here (2010-2013)</a>.</p>\n<p><strong>Theme 2013-2018</strong></p>\n<p><simple-light-box img-path="/lightbox/theme-ingram.jpg" img-title="Theme 2013-2018"></simple-light-box></p>\n<p><strong>Theme 2010-2013</strong></p>\n<p><simple-light-box img-path="/lightbox/theme-simon.jpg" img-title="Theme 2010-2013"></simple-light-box></p>\n<p><strong>Theme until 2010</strong></p>\n<p><img src="https://mdvanes.github.io/mdworld-simon/sites/default/files/images/vorig_design.jpg" alt="Theme until 2010"></p>',htmlAst:{type:"root",children:[{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"It's always a hard decision to move to a new platform for my personal site, and this time it was sped up by the growing\nneed for https (for SEO) and the release of GatsbyJS v1. "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:'Up until now I was using a monolitical Apache + PHP webserver, but since the 2013 version of the site, a dynamic webserver\nwas no longer needed for the blog, because it was generated statically with Jekyll. Only the "send mail" component was\nin PHP and I was running some other PHP apps, and hosting some binaries, that have nothing to do with the blog. I\'ve\ndone away with the PHP apps: communication by mail was already almost zero and the other apps were outdated. '}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Now the blog has been properly containerized, this means future upgrades will be easier too: the blog is its own app\nwith its own scope. When I will need anything dynamic in the future, I will use "},{type:"element",tagName:"a",properties:{href:"https://serverless.com/"},children:[{type:"text",value:"Serverless"}]},{type:"text",value:" functions."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Another good reason to migrate from "},{type:"element",tagName:"a",properties:{href:"https://jekyllrb.com/"},children:[{type:"text",value:"Jekyll"}]},{type:"text",value:" to "},{type:"element",tagName:"a",properties:{href:"https://www.gatsbyjs.org/"},children:[{type:"text",value:"Gatsby"}]},{type:"text",value:" is letting go\nof Ruby dependencies and migrating to a NodeJS\nbased platform. With Jekyll I started to run into problems with recreating the Jekyll stack with the\ncorrect dependencies to build the blog, in case of restoring after an emergency. This might be caused by my lack of knowledge\nof Ruby, but it meant it was really time to upgrade to a newer version of Jekyll or start with a new theme. And in the mean\ntime, Gatsby 1.0 was released and I really subscribe to the "},{type:"element",tagName:"a",properties:{href:"https://jamstack.org/"},children:[{type:"text",value:"JAMstack"}]},{type:"text",value:" architecture.  "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"With the new setup, I can work with a modern and familiar stack e.g. Babel, React, TravisCI. I still believe in static site\ngeneration for blogs, and just like in Jekyll, adding a post in Gatsby is just a matter of adding a Markdown file with\nsome frontmatter. But an improvement is that you can also drop React components in the pages dir that will be automatically\npicked up as pages. And it is even possible to add a React component inside a Markdown post. Try clicking the screenshots\nbelow for a simple lightbox feature and\nsee the source for "},{type:"element",tagName:"a",properties:{href:"https://raw.githubusercontent.com/mdvanes/mdworld-jackson/master/content/posts/2018-05-10-site-updated.md"},children:[{type:"text",value:"this post"}]},{type:"text",value:". "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"For more information about the current stack, see the "},{type:"element",tagName:"a",properties:{href:"../about"},children:[{type:"text",value:"about page"}]},{type:"text",value:"."}]},{type:"text",value:"\n"},{type:"element",tagName:"h1",properties:{id:"cover-images"},children:[{type:"element",tagName:"a",properties:{href:"#cover-images",ariaHidden:!0,className:["anchor"]},children:[{type:"element",tagName:"svg",properties:{ariaHidden:"true",height:16,version:"1.1",viewBox:"0 0 16 16",width:16},children:[{type:"element",tagName:"path",properties:{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},children:[]}]}]},{type:"text",value:"Cover images"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"The cover images for each post, e.g. the image you see on top of this post, are procedurally generated\nwith my project "},{type:"element",tagName:"a",properties:{href:"https://github.com/mdvanes/procgen-cover"},children:[{type:"text",value:"procgen-cover"}]},{type:"text",value:". This was inspired by the talk\nby "},{type:"element",tagName:"a",properties:{href:"http://www.galaxykate.com/"},children:[{type:"text",value:"Kate Compton"}]},{type:"text",value:" on "},{type:"element",tagName:"a",properties:{href:"https://2018.jsconf.is/"},children:[{type:"text",value:"JSConf.is"}]},{type:"text",value:" 2018. "}]},{type:"text",value:"\n"},{type:"element",tagName:"h1",properties:{id:"old-themes"},children:[{type:"element",tagName:"a",properties:{href:"#old-themes",ariaHidden:!0,className:["anchor"]},children:[{type:"element",tagName:"svg",properties:{ariaHidden:"true",height:16,version:"1.1",viewBox:"0 0 16 16",width:16},children:[{type:"element",tagName:"path",properties:{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},children:[]}]}]},{type:"text",value:"Old themes"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Static versions of the 2 last themes still run "},{type:"element",tagName:"a",properties:{href:"https://mdvanes.github.io/mdworld-ingram"},children:[{type:"text",value:"here (2013-2018)"}]},{type:"text",value:"\nand "},{type:"element",tagName:"a",properties:{href:"https://mdvanes.github.io/mdworld-simon"},children:[{type:"text",value:"here (2010-2013)"}]},{type:"text",value:"."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"strong",properties:{},children:[{type:"text",value:"Theme 2013-2018"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"simple-light-box",properties:{imgPath:"/lightbox/theme-ingram.jpg",imgTitle:"Theme 2013-2018"},children:[]}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"strong",properties:{},children:[{type:"text",value:"Theme 2010-2013"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"simple-light-box",properties:{imgPath:"/lightbox/theme-simon.jpg",imgTitle:"Theme 2010-2013"},children:[]}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"strong",properties:{},children:[{type:"text",value:"Theme until 2010"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"img",properties:{src:"https://mdvanes.github.io/mdworld-simon/sites/default/files/images/vorig_design.jpg",alt:"Theme until 2010"},children:[]}]}],data:{quirksMode:!1}},timeToRead:2,excerpt:"It's always a hard decision to move to a new platform for my personal site, and this time it was sped up by the growing\nneed for https (for…",frontmatter:{title:"Site updated",cover:"/cover/",hash:"1573bdd328cdab4afbc80a8a38f582bcb07880d6",date:"10-05-2018",category:"webdevelopment",tags:["webdevelopment"]},fields:{nextTitle:"Elm for front-end developers",nextSlug:"/elm-for-front-end-developers",prevTitle:"Polymer 2 and TypeScript",prevSlug:"/polymer-2-and-type-script",slug:"/site-updated"}}},pathContext:{slug:"/site-updated"}}}});
//# sourceMappingURL=path---site-updated-a5363dfd56a4112e6735.js.map